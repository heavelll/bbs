{"version":3,"sources":["Header.js","Post.js","Home.js","Person.js","Login.js","Register.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","user","path","useLocation","a","axios","get","then","setUser","code","className","to","id","style","backgroundImage","avatar","name","onClick","pathname","Post","useState","isLoading","setIsLoading","info","setInfo","commentRef","useRef","params","useParams","commentTip","type","notification","message","useEffect","res","data","catch","reason","post","title","moment","createAt","from","lastComment","content","comments","map","comment","idx","key","ownerId","undefined","msg","filter","it","description","toString","length","ref","e","current","value","trim","preventDefault","postComment","replyTo","email","Home","postInfo","setPostInfo","userInfo","setUserInfo","setLoading","titleRef","contentRef","history","useHistory","body","push","postId","console","log","posts","onKeyUp","Person","personInfo","setPersonInfo","checkUser","format","checkThisUser","checkPosts","checkPost","checkComments","checkComment","userId","Login","nameRef","pswRef","captchaRef","obj","password","captcha","goBack","handleChangeCaptcha","_","throttle","document","querySelector","src","Date","now","placeholder","alt","Register","emailRef","conName","setConName","conEmail","setConEmail","conPsw","setConPsw","fileAvatar","formData","FormData","append","file","conflictName","debounce","conflictEmail","conflictPsw","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","isJpgOrPng","error","isLt5M","size","AvatarUpload","state","loading","handleChange","status","originFileObj","imageUrl","setState","this","uploadButton","LoadingOutlined","PlusOutlined","marginTop","listType","showUploadList","action","onChange","width","React","Component","Footer","href","target","rel","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84dda882.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n\r\nexport default function Header(user) {\r\n  let path = useLocation();\r\n  async function logout() {\r\n    axios.get(\"/api/logout\").then(() => {\r\n      user.setUser({code: -1});\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/home\">主页</Link>\r\n      <div>\r\n        {\r\n          user.user.code === 0\r\n          ? (\r\n          <div className=\"welcomeInfo\">\r\n            <Link to={`/person/${user.user.user.id}`}>\r\n              <div className=\"avatar\" style={{backgroundImage: `url(${user.user.user.avatar})`}}></div>\r\n              <span>{user.user.user.name}</span>\r\n            </Link>\r\n            <span>,欢迎你!</span>\r\n            <button onClick={logout} className=\"logoutBtn\">登出</button>\r\n          </div>\r\n          )\r\n          : <div>\r\n              <span>未登录,请先</span>\r\n              <Link to={`${path.pathname}/login`}>登录</Link>\r\n              <span>,没有帐号?</span>\r\n              <Link to={`${path.pathname}/register`}>注册</Link>\r\n            </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  ) \r\n}","import axios from 'axios';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Link, useLocation, useParams } from 'react-router-dom'\r\nimport { notification } from 'antd'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\n\r\nexport default function Post({ user }) {\r\n  let [isLoading, setIsLoading] = useState(true);\r\n  let [info, setInfo] = useState(null);\r\n  let commentRef = useRef();\r\n  let path = useLocation();\r\n  let params = useParams();\r\n  useEffect(() => {\r\n    axios.get(`/api/post/${params.id}`).then(res => {\r\n      setInfo(res.data);\r\n      setIsLoading(false);\r\n    }).catch(reason => {\r\n      setInfo(false)\r\n    })\r\n  }, [params.id])\r\n  function handleComment(e) {\r\n    if(!commentRef.current.value.trim().length) {\r\n      notification[\"error\"]({\r\n        message: \"回复内容不能为空!\"\r\n      })\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let postComment = {\r\n      replyTo: params.id,\r\n      content: commentRef.current.value\r\n    }\r\n    axios.post(\"/api/comment\", postComment).then(res => {\r\n      commentRef.current.value = \"\";\r\n      setInfo({\r\n        ...info,\r\n        comments: [\r\n          ...info.comments,\r\n          {\r\n            avatar: res.data.user.avatar,\r\n            content: res.data.comment.content,\r\n            createAt: res.data.comment.createAt,\r\n            email: res.data.user.email,\r\n            name: res.data.user.name,\r\n            ownerId: res.data.comment.ownerId,\r\n            replyTo: res.data.comment.replyTo\r\n          }\r\n        ]\r\n      })\r\n      commentTip(\"success\");\r\n    }).catch(reason => {\r\n      commentTip(\"error\")\r\n    })\r\n  }\r\n\r\n  function commentTip(type) {\r\n    notification[type]({\r\n      message: type === \"success\" ? \"回复成功\" : \"回复失败\"\r\n    });\r\n  };\r\n\r\n  function handleDeleteComment(id) {\r\n    axios.post(`/api/delete-comment/${id}`, {}).then(res => {\r\n      if(res.data.code === 0) {\r\n        notification[\"success\"]({\r\n          message: res.data.msg\r\n        })\r\n        setInfo({\r\n          ...info,\r\n          comments: info.comments.filter(it => it.id !== id)\r\n        })\r\n      } else {\r\n        notification[\"error\"]({\r\n          message: res.data.msg\r\n        })\r\n      }\r\n    }).catch(reason => {\r\n      notification[\"error\"]({\r\n        message: \"出错了\",\r\n        description: reason.toString()\r\n      })\r\n    })\r\n  }\r\n \r\n  return (\r\n    <div className=\"outer\">\r\n      {\r\n        info === false\r\n        ? <div>未找到该帖子!</div>\r\n        : (\r\n          <>\r\n          \r\n          </>\r\n        )\r\n      }\r\n      <div>\r\n        {\r\n          isLoading\r\n          ? (\r\n              <>\r\n                {\r\n                  info !== false\r\n                  ? <div>loading...</div>\r\n                  : \"\"\r\n                }\r\n              </>\r\n            )\r\n          : (\r\n            <>\r\n              <div className=\"title box\">\r\n                <h2>{info.post.title}</h2>\r\n                <div>\r\n                  <div className=\"timeInTitle\">\r\n                    <div>\r\n                      <Link to={`/person/${info.post.id}`} className=\"poster\">{info.post.name}</Link>\r\n                      <span className=\"separate\">|</span>\r\n                      发布时间:{moment(info.post.createAt).from()}\r\n                      <span className=\"separate\">|</span>\r\n                      最新回复:{moment(info.post.lastComment).from()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"titleContent\">\r\n                  <Link to={`/person/${info.post.id}`}>\r\n                    <div style={{backgroundImage: `url(${info.post.avatar})`}} className=\"avatarInBox\"></div>\r\n                  </Link>\r\n                  <div className=\"titleInline\">\r\n                    {info.post.content}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                {\r\n                  info.comments.map((comment, idx) => {\r\n                    return (\r\n                      <div className=\"box\" key={idx}>\r\n                        <Link to={`/person/${comment.ownerId}`}>\r\n                          <div className=\"avatarInBox\" style={{backgroundImage: `url(${comment.avatar})`}}></div>\r\n                        </Link>\r\n                        <div className=\"contentInBox\">\r\n                          <div className=\"timeInTitle\">\r\n                            <div>\r\n                              <Link to={`/person/${comment.ownerId}`} className=\"poster\">{comment.name}</Link>\r\n                              <span className=\"separate\">|</span>\r\n                              {moment(info.post.createAt).from()}\r\n                              {\r\n                                info.user\r\n                                ? (\r\n                                  <>\r\n                                    {\r\n                                      info.user.id === comment.ownerId\r\n                                      ? user.code !== -1 && user.code !==undefined\r\n                                        ? (\r\n                                          <>\r\n                                            <span className=\"separate\">|</span>\r\n                                            <span className=\"time delete\" onClick={() => {handleDeleteComment(comment.id)}}>删除</span>\r\n                                          </>\r\n                                        )\r\n                                        : \"\"\r\n                                      : \"\"\r\n                                    }\r\n                                  </>\r\n                                )\r\n                                : \"\"\r\n                              }\r\n                            </div>\r\n                            <div className=\"floor\">\r\n                              {idx + 1}楼\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            {comment.content}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n                {\r\n                  info.comments.length\r\n                  ? \"\"\r\n                  : <div className=\"tip\">这个帖子还没有人回复过,回复一下吧~</div>\r\n                }\r\n              </div>\r\n            </>\r\n          )\r\n        }\r\n      </div>\r\n      {\r\n        info === false\r\n        ? \"\"\r\n        : (\r\n          <div className=\"textZone\">\r\n            {\r\n              user.code === -1 || user.code === undefined\r\n              ? (<div>\r\n                  <span>您还未登录,登陆后即可回复^_^</span><Link to={`${path.pathname}/login`}>登录</Link>\r\n                </div>)\r\n              : (<div className=\"postMain\">\r\n                  <span>评论：</span>\r\n                  <textarea className=\"commentContent\" ref={commentRef}></textarea>\r\n                  <button className=\"postBtn\" onClick={handleComment}>提交</button>\r\n                </div>)\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nimport { notification } from 'antd'\r\n\r\nexport default function Home({ user }) {\r\n  let [postInfo, setPostInfo] = useState(null);\r\n  let [userInfo, setUserInfo] = useState({});\r\n  let [isLoading, setLoading] = useState(true);\r\n  // let [countTitle, setCountTitle] = useState(40);\r\n  // let [countContent, setCountContent] = useState(140);\r\n  // let [isTitleLegal, setTitleLegal] = useState({});\r\n  // let [isContentLegal, setContentLegal] = useState({});\r\n  let titleRef = useRef();\r\n  let contentRef = useRef();\r\n  let path = useLocation();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    axios.get(\"/api/posts\").then(res => {\r\n      setPostInfo(res.data.posts);\r\n      setUserInfo(res.data.user ? res.data.user : {});\r\n      setLoading(false);\r\n    })\r\n  }, [])\r\n\r\n  async function handleCreatePost(e) {\r\n    if (!titleRef.current.value.trim().length) {\r\n      notification[\"error\"]({\r\n        message: \"标题不能为空\"\r\n      })\r\n      return;\r\n    }\r\n    if (!contentRef.current.value.trim().length) {\r\n      notification[\"error\"]({\r\n        message: \"内容不能为空\"\r\n      })\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let body = {\r\n      title: titleRef.current.value.trim(),\r\n      content: contentRef.current.value\r\n    }\r\n    await axios.post(\"/api/create-post\", body).then(res => {\r\n      titleRef.current.value = \"\";\r\n      contentRef.current.value = \"\";\r\n      history.push(`/post/${res.data.postId.id}`)\r\n    }).catch(reason => {\r\n      console.log(reason);\r\n    })\r\n  }\r\n\r\n  function handleDeletePost(id) {\r\n    axios.post(`/api/delete-post/${id}`, {}).then(res => {\r\n      if(res.data.code === 0) {\r\n        notification['success']({\r\n          message: res.data.msg\r\n        })\r\n        setPostInfo(postInfo.filter(it => it.id !== id))\r\n      } else {\r\n        notification['error']({\r\n          message: res.data.msg\r\n        })\r\n      }\r\n    }).catch(reason => {\r\n      notification['error']({\r\n        message: \"出错了\",\r\n        description: reason.toString()\r\n      })\r\n    })\r\n  }\r\n\r\n  function handleTitleLimit() {\r\n\r\n  }\r\n\r\n  function handleContentLimit() {\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"outer\">\r\n        <div className=\"homeLayout\">\r\n          <div className=\"postPart\">\r\n            {\r\n              isLoading\r\n                ? <div>loading...</div>\r\n                : postInfo.map((post, idx) => {\r\n                  return (\r\n                    <div key={idx} className=\"box\">\r\n                      <Link to={`/person/${post.ownerId}`}>\r\n                        <div className=\"avatarInBox\" style={{ backgroundImage: `url(${post.avatar})` }}></div>\r\n                      </Link>\r\n                      <div className=\"contentInBox\">\r\n                        <div className=\"timeInTitle\">\r\n                          <Link className=\"titleLink\" to={`/post/${post.id}`}>{post.title}</Link>\r\n                        </div>\r\n                        <div className=\"posterInfo\">\r\n                          <Link to={`/person/${post.ownerId}`} className=\"poster\">{post.name}</Link>\r\n                          <span className=\"separate\">|</span>\r\n                          <span className=\"time\">{moment(post.createAt).from()}</span>\r\n                          <span className=\"separate\">|</span>\r\n                          <span className=\"time\">最新回复:{\r\n                            post.createAt === post.lastComment\r\n                              ? \"无\"\r\n                              : moment(post.lastComment).from()\r\n                          }\r\n                          </span>\r\n                          {\r\n                            userInfo.id === post.ownerId\r\n                            ? user.code !== -1 && user.code !== undefined\r\n                              ? (<>\r\n                                <span className=\"separate\">|</span>\r\n                                <span className=\"time delete\" onClick={() => {handleDeletePost(post.id)}}>删除</span>\r\n                              </>)\r\n                              : \"\"\r\n                            : \"\"\r\n                          }\r\n                        </div>\r\n                        \r\n                      </div>\r\n\r\n                    </div>\r\n                  )\r\n                })\r\n            }\r\n          </div>\r\n          {/* <div className=\"rightPart\">\r\n\r\n          </div> */}\r\n        </div>\r\n        <div className=\"textZone\">\r\n          {\r\n            user.code === -1 || user.code === undefined\r\n              ? (<div className=\"loginTip\">\r\n                <span>您还未登录,登陆后即可发帖^_^</span><Link to={`${path.pathname}/login`}>登录</Link>\r\n              </div>)\r\n              : (<div className=\"postMain\">\r\n                <div>主题{}</div>\r\n                <input className=\"postTitle\" onKeyUp={handleTitleLimit} ref={titleRef}></input>\r\n                <div>内容{}</div>\r\n                <textarea className=\"postContent\" onKeyUp={handleContentLimit} ref={contentRef}></textarea>\r\n                <button className=\"postBtn\" onClick={handleCreatePost}>发布</button>\r\n              </div>)\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\n\r\nexport default function Person({ user }) {\r\n  let params = useParams();\r\n  let [personInfo, setPersonInfo] = useState(null);\r\n  let [isLoading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    (async () => {\r\n      let res = await axios.get(`/api/person/${params.id}`).then(res => {\r\n        setPersonInfo(res.data);\r\n        setLoading(false);\r\n      })\r\n      return res;\r\n    })()\r\n  }, [params.id, user])\r\n  return (\r\n    <div className=\"outer\">\r\n      {\r\n        isLoading\r\n        ? <div>loading...</div>\r\n        : (\r\n          <>\r\n            <div className=\"box\">\r\n              <div className=\"avatarInBox personPageAvatar\" style={{backgroundImage: `url(${personInfo.checkUser.avatar})`}}></div>\r\n              <div className=\"contentInBox\">\r\n                <h2>{personInfo.checkUser.name}的个人主页</h2>\r\n                <div className=\"timeInTitle postPageDate\">\r\n                  <div>本站第{personInfo.checkUser.id}号会员</div>\r\n                  <div>加入时间:\r\n                    <br />\r\n                    {moment(personInfo.checkUser.createAt).format(\"llll\")}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"box\">\r\n              <div className=\"contentInBox\">\r\n                <h3>{personInfo.checkUser.id === personInfo.checkThisUser.id ? \"你\" : \"TA\"}创建的所有主题</h3>\r\n                <div>\r\n                  {\r\n                    personInfo.checkPosts.map((checkPost, idx) => {\r\n                      return (\r\n                        <div key={idx}>\r\n                          <hr />\r\n                          <Link className=\"titleLink\" to={`/post/${checkPost.id}`}>{checkPost.title}</Link>\r\n                          <div className=\"timeInTitle timeInSub\">\r\n                            {moment(checkPost.createAt).format(\"lll\")}\r\n                            <span className=\"separate\">|</span>\r\n                            最近回复:{checkPost.lastComment === checkPost.createAt ? \"无\" : moment(checkPost.lastComment).from()}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"box\">\r\n              <div className=\"contentInBox\">\r\n                <h3>{personInfo.checkUser.id === personInfo.checkThisUser.id ? \"你\" : \"TA\"}的回复</h3>\r\n                <div>\r\n                  {\r\n                    personInfo.checkComments.map((checkComment, idx) => {\r\n                      return (\r\n                        <div key={idx}>\r\n                          <hr />\r\n                          <div>\r\n                            回复了<Link to={`/person/${checkComment.userId}`}>{checkComment.name}</Link>创建的主题<Link className=\"titleLink\" to={`/post/${checkComment.id}`}>{checkComment.title}</Link>\r\n                          </div>\r\n                          <div className=\"personComment\">\r\n                            {checkComment.content}\r\n                          </div>\r\n                          <div className=\"timeInTitle timeInSub\">\r\n                            {moment(checkComment.createAt).format(\"lll\")}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\nimport React, { useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { notification } from 'antd'\r\nimport _ from \"lodash\"\r\n\r\nexport default function Login({ setUser }) {\r\n  let nameRef = useRef();\r\n  let pswRef = useRef();\r\n  let captchaRef= useRef();\r\n  let history = useHistory();\r\n  async function handleLogin(e) {\r\n    if(!nameRef.current.value || !pswRef.current.value) {\r\n      notification['error']({\r\n        message: \"登录失败!\",\r\n        description: \"用户名和密码不能为空\"\r\n      })\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let obj = {\r\n      name: nameRef.current.value,\r\n      password: pswRef.current.value,\r\n      captcha: captchaRef.current.value\r\n    }\r\n    await axios.post(\"/api/login\", obj).then(res => {\r\n      if(res.data.code) {\r\n        notification['error']({\r\n          message: \"登录失败!\",\r\n          description: res.data.msg\r\n        })\r\n        setUser({code: -1})\r\n      } else {\r\n        setUser(res.data.user);\r\n        notification['success']({\r\n          message: \"登录成功!\"\r\n        })\r\n        history.goBack();\r\n      }\r\n    })\r\n  }\r\n\r\n  function handleClose() {\r\n    history.goBack();\r\n  }\r\n\r\n  function handleChangeCaptchaNotD() {\r\n    let cap = document.querySelector(\".captcha\");\r\n    cap.src = `/api/captcha?t=${Date.now()}`;\r\n  }\r\n\r\n  let handleChangeCaptcha = _.throttle(handleChangeCaptchaNotD, 2000)\r\n\r\n  return (\r\n    <div className=\"shade\">\r\n      <div className=\"shadeBox\">\r\n        <h2>登录</h2>\r\n        <span className=\"closeBox\" onClick={handleClose}>&times;</span>\r\n        <div>\r\n          <input type=\"text\" className=\"inputStyle\" placeholder=\"请输入用户名\" ref={nameRef}/>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <input type=\"password\" className=\"inputStyle\" placeholder=\"请输入密码\" ref={pswRef}/>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <img className=\"captcha\" alt=\"captcha\" src={`/api/captcha?t=${Date.now()}`} /> <span className=\"changeCaptcha\" onClick={handleChangeCaptcha}>换一张</span>\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" className=\"inputStyle\" placeholder=\"请输入验证码(区分大小写)\" ref={captchaRef}/>\r\n        </div>\r\n        <br />\r\n        <button className=\"logRegBtn\" onClick={handleLogin}>登录</button><br />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from 'axios';\r\nimport React, { useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { Upload, message } from 'antd'\r\nimport { notification } from 'antd'\r\nimport _ from 'lodash'\r\n\r\n\r\n\r\nexport default function Register() {\r\n  let history = useHistory();\r\n  let nameRef = useRef();\r\n  let emailRef = useRef();\r\n  let pswRef = useRef();\r\n  let [conName, setConName] = useState();\r\n  let [conEmail, setConEmail] = useState();\r\n  let [conPsw, setConPsw] = useState();\r\n  \r\n  let fileAvatar = {};\r\n\r\n  async function handleRegister(e) {\r\n    if(conPsw && conPsw.code) {\r\n      notification[\"error\"]({\r\n        message: \"注册失败\",\r\n        description: \"请重新填写\"\r\n      })\r\n      return;\r\n    }\r\n    if (!conName || !pswRef.current.value || !conEmail || conName.code || conEmail.code) {\r\n      notification[\"error\"]({\r\n        message: \"注册失败\",\r\n        description: \"请重新填写\"\r\n      })\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    let formData = new FormData();\r\n    formData.append(\"name\", nameRef.current.value);\r\n    formData.append(\"password\", pswRef.current.value);\r\n    formData.append(\"email\", emailRef.current.value);\r\n    formData.append(\"avatar\", fileAvatar.file);\r\n    await axios.post(\"/api/register\", formData).then(res => {\r\n      if (res.code) {\r\n        notification[\"error\"]({\r\n          message: res.data.msg\r\n        })\r\n      } else {\r\n        notification[\"success\"]({\r\n          message: res.data.msg\r\n        })\r\n        history.goBack();\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  async function conflictNameNotD(e) {\r\n    // let exp = /^[a-z]$|^[1-9_]$|^Backspace$/;\r\n    // if (exp.test(e.key)) {\r\n    await axios.post('/api/conflict/name', {\r\n      name: nameRef.current.value\r\n    }).then(res => {\r\n      setConName(res.data);\r\n    }).catch(reason => {\r\n\r\n    })\r\n    // }\r\n  }\r\n\r\n  async function conflictEmailNotD(e) {\r\n    // let exp = /^[a-z]$|^[1-9_]$|^Backspace$/;\r\n    // if (exp.test(e.key)) {\r\n    await axios.post('/api/conflict/email', {\r\n      email: emailRef.current.value\r\n    }).then(res => {\r\n      setConEmail(res.data);\r\n    }).catch(reason => {\r\n\r\n    })\r\n    // }\r\n  }\r\n\r\n  function conflictPswNotD(e) {\r\n    if(pswRef.current.value.length === 0) {\r\n      setConPsw({code: -1, msg: \"密码不能为空\"});\r\n      return;\r\n    }\r\n    if(pswRef.current.value.length >= 6 && pswRef.current.value.length <= 18) {\r\n      setConPsw({code: 0, msg: \"此密码可用\"});\r\n    } else if(pswRef.current.value.length < 6) {\r\n      setConPsw({code: -1, msg: \"该密码过短\"});\r\n    } else if(pswRef.current.value.length > 18) {\r\n      setConPsw({code: -1, msg: \"该密码过长\"});\r\n    }\r\n  }\r\n\r\n  var conflictName = _.debounce(conflictNameNotD, 1000);\r\n  var conflictEmail = _.debounce(conflictEmailNotD, 1000);\r\n  var conflictPsw = _.debounce(conflictPswNotD, 500);\r\n\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    if (!isLt5M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n    fileAvatar.file = file\r\n    return isJpgOrPng && isLt5M;\r\n  }\r\n\r\n  class AvatarUpload extends React.Component {\r\n    state = {\r\n      loading: false,\r\n    };\r\n\r\n    handleChange = info => {\r\n      if (info.file.status === 'uploading') {\r\n        this.setState({ loading: true });\r\n        return;\r\n      }\r\n      if (info.file.status === 'done') {\r\n        // Get this url from response in real world.\r\n        getBase64(info.file.originFileObj, imageUrl =>\r\n          this.setState({\r\n            imageUrl,\r\n            loading: false,\r\n          }),\r\n        );\r\n      }\r\n    };\r\n\r\n    render() {\r\n      const { loading, imageUrl } = this.state;\r\n      const uploadButton = (\r\n        <div>\r\n          {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n          <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n      );\r\n      return (\r\n        <Upload\r\n          name=\"avatar\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          beforeUpload={beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n        </Upload>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  function handleClose() {\r\n    history.goBack();\r\n  }\r\n  return (\r\n    <div className=\"shade\">\r\n      <div className=\"shadeBox\">\r\n        <h2>注册</h2>\r\n        <span className=\"closeBox\" onClick={handleClose}>&times;</span>\r\n        <div>\r\n          <input onKeyUp={conflictName} className=\"inputStyle\" type=\"text\" placeholder=\"请输入用户名\" ref={nameRef} />\r\n        </div>\r\n        {\r\n          conName\r\n            ? <span className={conName.code ? \"con\" : \"notCon\"}>{conName.msg}</span>\r\n            : <br />\r\n        }\r\n        <div>\r\n          <input onKeyUp={conflictEmail} className=\"inputStyle\" type=\"text\" placeholder=\"请输入邮箱\" ref={emailRef} />\r\n        </div>\r\n        {\r\n          conEmail\r\n            ? <span className={conEmail.code ? \"con\" : \"notCon\"}>{conEmail.msg}</span>\r\n            : <br />\r\n        }\r\n        <div>\r\n          <input type=\"password\" onKeyUp={conflictPsw} className=\"inputStyle\" placeholder=\"请输入密码\" ref={pswRef} />\r\n        </div>\r\n        {\r\n          conPsw\r\n          ? <span className={conPsw.code ? \"con\" : \"notCon\"}>{conPsw.msg}</span>\r\n          : <br />\r\n        }\r\n        <div>\r\n          上传头像：\r\n          <AvatarUpload />\r\n        </div>\r\n        <br />\r\n        <button className=\"logRegBtn\" onClick={handleRegister}>注册</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div>Copyright&copy;2020 by&nbsp;<a href=\"https://github.com/heavelll\" target=\"_blank\" rel=\"noopener noreferrer\">Heavelll</a></div>\r\n      <div className=\"thanks\">感谢您的访问!</div>\r\n      <div className=\"motto\">保持对技术的热情与好奇心</div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport Header from './Header'\nimport Post from './Post'\nimport Home from './Home'\nimport axios from 'axios'\n// import Banner from './Banner'\nimport Person from './Person'\nimport Login from './Login'\nimport Register from './Register'\nimport 'antd/dist/antd.css'\nimport Footer from './Footer'\n\nfunction App() {\n  let [user, setUser] = useState({});\n  useEffect(() => {\n    axios.get(\"/api/userInfo\").then(res => {\n      setUser(res.data);\n    })\n  }, [user.id])\n\n  return (\n    <>\n      <div className=\"headWrapper\">\n        <Header user={user} setUser={setUser}/>\n      </div>\n      <div className=\"container\">\n        {/* <Banner /> */}\n        <div className=\"mainRow\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route path=\"/home\">\n              <Home user={user} />\n            </Route>\n            <Route path=\"/post/:id\">\n              <Post user={user} />\n            </Route>\n            <Route path=\"/person/:id\">\n              <Person user={user} />\n            </Route>\n            <Redirect from=\"/*\" to=\"/\" />\n          </Switch>\n        </div>\n      </div>\n      <Footer />\n      <Switch>\n        <Route path=\"/*/login\">\n          <Login  setUser={setUser}/>\n        </Route>\n        <Route path=\"/*/register\">\n          <Register />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}